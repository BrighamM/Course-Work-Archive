<map version="freeplane 1.2.0">
<!--To view this file, download free mind mapping software Freeplane from http://freeplane.sourceforge.net -->
<node TEXT="04 - Control Flow" ID="ID_772387649" CREATED="1431978662185" MODIFIED="1431978698847">
<attribute NAME="author" VALUE="Kenneth Sundberg"/>
<attribute NAME="date" VALUE=""/>
<attribute NAME="subtitle" VALUE="CS 1400 - Lecture 4"/>
<hook NAME="MapStyle">
    <properties show_icon_for_attributes="true"/>

<map_styles>
<stylenode LOCALIZED_TEXT="styles.root_node">
<stylenode LOCALIZED_TEXT="styles.predefined" POSITION="right">
<stylenode LOCALIZED_TEXT="default" MAX_WIDTH="600" COLOR="#000000" STYLE="as_parent">
<font NAME="SansSerif" SIZE="10" BOLD="false" ITALIC="false"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.details"/>
<stylenode LOCALIZED_TEXT="defaultstyle.note"/>
<stylenode LOCALIZED_TEXT="defaultstyle.floating">
<edge STYLE="hide_edge"/>
<cloud COLOR="#f0f0f0" SHAPE="ROUND_RECT"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.user-defined" POSITION="right">
<stylenode LOCALIZED_TEXT="styles.topic" COLOR="#18898b" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subtopic" COLOR="#cc3300" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subsubtopic" COLOR="#669900">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.important">
<icon BUILTIN="yes"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.AutomaticLayout" POSITION="right">
<stylenode LOCALIZED_TEXT="AutomaticLayout.level.root" COLOR="#000000">
<font SIZE="18"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,1" COLOR="#0033ff">
<font SIZE="16"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,2" COLOR="#00b439">
<font SIZE="14"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,3" COLOR="#990000">
<font SIZE="12"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,4" COLOR="#111111">
<font SIZE="10"/>
</stylenode>
</stylenode>
</stylenode>
</map_styles>
</hook>
<node TEXT="Decision Making" POSITION="right" ID="ID_1429913921" CREATED="1432062512046" MODIFIED="1432062516683">
<node TEXT="Conditionals" ID="ID_1586458337" CREATED="1432062526679" MODIFIED="1432062539246">
<node TEXT="Conditions" ID="ID_1352809588" CREATED="1432062656280" MODIFIED="1432062660555">
<node TEXT="It is very difficult to write interesting code that is unconditional" ID="ID_1750785575" CREATED="1434747564791" MODIFIED="1434747586299"/>
<node TEXT="Usually behavior should depend on input" ID="ID_867850003" CREATED="1434747586726" MODIFIED="1434747598726"/>
</node>
<node TEXT="If Statement" ID="ID_491507986" CREATED="1432062660976" MODIFIED="1433809589647">
<attribute NAME="textbook" VALUE="4-02"/>
<node TEXT="If statements allow code to be executed only if some condition is true" ID="ID_697390714" CREATED="1434747996677" MODIFIED="1434748018490"/>
<node TEXT="Conditions are boolean values" ID="ID_419125730" CREATED="1434748018997" MODIFIED="1434748034566">
<node TEXT="If a condition is complex consider using a function to encapsulate logic" ID="ID_562565915" CREATED="1434748034571" MODIFIED="1434748050306"/>
</node>
</node>
<node TEXT="If Syntax" LOCALIZED_STYLE_REF="styles.important" ID="ID_50203107" CREATED="1434747502704" MODIFIED="1434747546016">
<node TEXT="if (condition)" ID="ID_1820216198" CREATED="1434747512393" MODIFIED="1434747521638"/>
<node TEXT="{" ID="ID_1890105819" CREATED="1434747522534" MODIFIED="1434747523869"/>
<node TEXT="  //do stuff" ID="ID_1671026556" CREATED="1434747524687" MODIFIED="1434747838778"/>
<node TEXT="}" ID="ID_348059783" CREATED="1434747532565" MODIFIED="1434747535063"/>
</node>
<node TEXT="Common If Error" LOCALIZED_STYLE_REF="styles.important" ID="ID_888600341" CREATED="1434748926173" MODIFIED="1434748988973">
<node TEXT="if(condition)" ID="ID_1088926475" CREATED="1434748932241" MODIFIED="1434748936363"/>
<node TEXT="  doA();" ID="ID_1185993939" CREATED="1434748937261" MODIFIED="1434748942043"/>
<node TEXT=" //missing {} means that this line always executes" ID="ID_596822169" CREATED="1435355405767" MODIFIED="1435355448410"/>
<node TEXT="  doB();" ID="ID_521927892" CREATED="1434748942469" MODIFIED="1435355416237"/>
<node TEXT="" ID="ID_1579799512" CREATED="1434749061517" MODIFIED="1434749061517"/>
<node TEXT="if(condition)" ID="ID_1860506579" CREATED="1434748932241" MODIFIED="1434748936363"/>
<node TEXT="{" ID="ID_1071056745" CREATED="1434749025325" MODIFIED="1434749028013"/>
<node TEXT="  doA();" ID="ID_1667142176" CREATED="1434748937261" MODIFIED="1434748942043"/>
<node TEXT="  doB();  //doB is now also conditional" ID="ID_468418926" CREATED="1434748942469" MODIFIED="1434749049154"/>
<node TEXT="}" ID="ID_1290138615" CREATED="1434749029117" MODIFIED="1434749030603"/>
</node>
<node TEXT="Else Statement" ID="ID_938840437" CREATED="1432062664560" MODIFIED="1433809670564">
<attribute NAME="textbook" VALUE="4-03"/>
<node TEXT="Sometimes you want to run one function if the condition is true and another if its false" ID="ID_1874416093" CREATED="1434748074221" MODIFIED="1434748106514"/>
<node TEXT="The optional else portion allows this" ID="ID_1446498440" CREATED="1434748107933" MODIFIED="1434748131358"/>
</node>
<node TEXT="Else Syntax" LOCALIZED_STYLE_REF="styles.important" ID="ID_1841291275" CREATED="1434747502704" MODIFIED="1434747797666">
<node TEXT="if (condition)" ID="ID_1443100413" CREATED="1434747512393" MODIFIED="1434747521638"/>
<node TEXT="{" ID="ID_523171756" CREATED="1434747522534" MODIFIED="1434747523869"/>
<node TEXT="  //do stuff" ID="ID_1053641482" CREATED="1434747524687" MODIFIED="1434747833347"/>
<node TEXT="}" ID="ID_765757385" CREATED="1434747532565" MODIFIED="1434747535063"/>
<node TEXT="else //condition is not true" ID="ID_1521810946" CREATED="1434747801981" MODIFIED="1434747813050"/>
<node TEXT="{" ID="ID_1662302742" CREATED="1434747813613" MODIFIED="1434747815011"/>
<node TEXT="  //do other stuff" ID="ID_197306828" CREATED="1434747815653" MODIFIED="1434747829810"/>
<node TEXT="}" ID="ID_1587910775" CREATED="1434747820349" MODIFIED="1434747825923"/>
</node>
<node TEXT="Else If" ID="ID_1860102695" CREATED="1432062672430" MODIFIED="1435100248696">
<attribute NAME="textbook" VALUE="4-04"/>
<attribute NAME="textbook" VALUE="4-06"/>
<node TEXT="Sometimes there are more than two options" ID="ID_1381728225" CREATED="1434748252525" MODIFIED="1434748262871"/>
<node TEXT="If statments can be put in the body of other if statements" ID="ID_561023505" CREATED="1434748263141" MODIFIED="1434748281434"/>
<node TEXT="The Else If syntax is a convinient shorthand for this" ID="ID_1061881354" CREATED="1434748281717" MODIFIED="1434748290730"/>
<node TEXT="Be very cautious with this construct -- it is often a sign of poor design" ID="ID_1515198271" CREATED="1434748317405" MODIFIED="1434748337418"/>
</node>
<node TEXT="Else If Expanded" LOCALIZED_STYLE_REF="styles.important" ID="ID_602979826" CREATED="1434748138013" MODIFIED="1434748224660">
<node TEXT="if (condition1)" ID="ID_1115869455" CREATED="1434748162269" MODIFIED="1434748169139"/>
<node TEXT="{}" ID="ID_1372906158" CREATED="1434748154930" MODIFIED="1434748214131"/>
<node TEXT="else" ID="ID_554027768" CREATED="1434748171445" MODIFIED="1434748183314"/>
<node TEXT="{" ID="ID_301900234" CREATED="1434748183805" MODIFIED="1434748185579"/>
<node TEXT="  if(condition2)" ID="ID_638871145" CREATED="1434748186165" MODIFIED="1434748197931"/>
<node TEXT="  {}" ID="ID_955715440" CREATED="1434748198413" MODIFIED="1434748201779"/>
<node TEXT="  else" ID="ID_1958354471" CREATED="1434748302253" MODIFIED="1434748307467"/>
<node TEXT="  {}" ID="ID_1686888855" CREATED="1434748307989" MODIFIED="1434748310797"/>
<node TEXT="}" ID="ID_210555011" CREATED="1434748202245" MODIFIED="1434748204659"/>
</node>
<node TEXT="Else If Syntax" LOCALIZED_STYLE_REF="styles.important" ID="ID_152281181" CREATED="1434747502704" MODIFIED="1434747898324">
<node TEXT="if (condition1)" ID="ID_196702156" CREATED="1434747512393" MODIFIED="1434747915883"/>
<node TEXT="{" ID="ID_739906828" CREATED="1434747522534" MODIFIED="1434747523869"/>
<node TEXT="  //do stuff" ID="ID_713067150" CREATED="1434747524687" MODIFIED="1434747833347"/>
<node TEXT="}" ID="ID_290016286" CREATED="1434747532565" MODIFIED="1434747535063"/>
<node TEXT="else if (condition2) //condition1 is not true" ID="ID_520904946" CREATED="1434747921701" MODIFIED="1434747935276"/>
<node TEXT="{" ID="ID_1596500369" CREATED="1434747935789" MODIFIED="1434747937803"/>
<node TEXT="  //do stuff" ID="ID_535257512" CREATED="1434747938509" MODIFIED="1434747943946"/>
<node TEXT="} //any number of else ifs can go here" ID="ID_1562430126" CREATED="1434747944397" MODIFIED="1434747988154"/>
<node TEXT="else //neither condition 1 or 2 is true" ID="ID_946358048" CREATED="1434747801981" MODIFIED="1434747966700"/>
<node TEXT="{" ID="ID_330250316" CREATED="1434747813613" MODIFIED="1434747815011"/>
<node TEXT="  //do other stuff" ID="ID_1822048294" CREATED="1434747815653" MODIFIED="1434747829810"/>
<node TEXT="}" ID="ID_89274378" CREATED="1434747820349" MODIFIED="1434747825923"/>
</node>
<node TEXT="Switch" ID="ID_117139533" CREATED="1432062674847" MODIFIED="1433809700012">
<attribute NAME="textbook" VALUE="4-12"/>
<node TEXT="The switch statement is for when there are many options" ID="ID_1359306882" CREATED="1434748358189" MODIFIED="1434748371362"/>
<node TEXT="Rather than a condition it uses a integral case label" ID="ID_1270880664" CREATED="1434748371629" MODIFIED="1434748395469">
<node TEXT="int" ID="ID_1143951343" CREATED="1434748395472" MODIFIED="1434748397634"/>
<node TEXT="char" ID="ID_1898982641" CREATED="1434748397853" MODIFIED="1434748398994"/>
<node TEXT="enum" ID="ID_1912541053" CREATED="1434748399249" MODIFIED="1434748401762"/>
</node>
<node TEXT="Has desirable performance characteristics for low-level code" ID="ID_1168696334" CREATED="1434748404333" MODIFIED="1434748416499"/>
<node TEXT="Almost always a bad idea" ID="ID_1847310280" CREATED="1434748416909" MODIFIED="1434748423107"/>
<node TEXT="If you have to use one \emph{dont forget the break statements}" ID="ID_1443421274" CREATED="1434748439245" MODIFIED="1434748456010"/>
</node>
<node TEXT="Switch Syntax" LOCALIZED_STYLE_REF="styles.important" ID="ID_199804497" CREATED="1434748463701" MODIFIED="1434748562318">
<node TEXT="switch(x)" ID="ID_1343116438" CREATED="1434748473928" MODIFIED="1434748478850"/>
<node TEXT="{" ID="ID_1194579132" CREATED="1434748479197" MODIFIED="1434748480506"/>
<node TEXT="case 0:" ID="ID_906409119" CREATED="1434748480941" MODIFIED="1434748487586"/>
<node TEXT="  //do somthing if 0" ID="ID_1461923303" CREATED="1434748488101" MODIFIED="1434748496678"/>
<node TEXT="  break;" ID="ID_1546207381" CREATED="1434748497143" MODIFIED="1434748499422"/>
<node TEXT="case 1:" ID="ID_551141621" CREATED="1434748499846" MODIFIED="1434748501782"/>
<node TEXT="case 2:" ID="ID_1988615843" CREATED="1434748502142" MODIFIED="1434748504350"/>
<node TEXT="  //do something if 1 or 2" ID="ID_1629120802" CREATED="1434748504814" MODIFIED="1434748510026"/>
<node TEXT="  break;" ID="ID_1991587305" CREATED="1434748547559" MODIFIED="1434748551149"/>
<node TEXT="default:" ID="ID_1249384676" CREATED="1434748510494" MODIFIED="1434748515262"/>
<node TEXT="  //do something if not 0,1, or 2" ID="ID_392456362" CREATED="1434748515893" MODIFIED="1434748531118"/>
<node TEXT="}" ID="ID_861266941" CREATED="1434748544574" MODIFIED="1434748546198"/>
</node>
</node>
</node>
<node TEXT="Repetition" POSITION="right" ID="ID_145529411" CREATED="1432062517038" MODIFIED="1435092684590">
<node TEXT="Loops" ID="ID_1554547031" CREATED="1432062520831" MODIFIED="1432062522710">
<node TEXT="Iteration" ID="ID_1907483948" CREATED="1434749084621" MODIFIED="1434749088377">
<node TEXT="Some steps are repetitive" ID="ID_394385754" CREATED="1434749089709" MODIFIED="1434749096579"/>
<node TEXT="If you write out the repetition then you violate DRY" ID="ID_820037963" CREATED="1434749097070" MODIFIED="1434749124383"/>
<node TEXT="Rather you want to instruct the computer to repeat steps some number of times, or until some condition" ID="ID_1508392589" CREATED="1434749133343" MODIFIED="1434749152861"/>
<node TEXT="This type of repetition is called \emph{iteration}" ID="ID_281054955" CREATED="1434749153191" MODIFIED="1434749171447"/>
</node>
<node TEXT="Infinite Loops" ID="ID_632705333" CREATED="1435092705990" MODIFIED="1435092711975">
<node TEXT="It can be easy to make a mistake that leads to endless repetition" ID="ID_199750250" CREATED="1435092711980" MODIFIED="1435092733265"/>
<node TEXT="Be careful with the condition that ends your loop" ID="ID_1063731579" CREATED="1435092733528" MODIFIED="1435092756240"/>
<node TEXT="The existance of this problem a fundamental property of computability" ID="ID_952205117" CREATED="1435092756472" MODIFIED="1435092791081">
<node TEXT="Called the Halting Problem" ID="ID_542037963" CREATED="1435092791091" MODIFIED="1435092805696"/>
</node>
</node>
<node TEXT="While Statement" ID="ID_320007993" CREATED="1432062678903" MODIFIED="1435099176574">
<attribute NAME="textbook" VALUE="5-01"/>
<node TEXT="Repeats a block of code as long as a condition is true" ID="ID_546445440" CREATED="1435092818968" MODIFIED="1435092835584"/>
<node TEXT="Be sure to update the condition in the body of the code" ID="ID_1587314633" CREATED="1435092835808" MODIFIED="1435092846668"/>
</node>
<node TEXT="While Syntax" LOCALIZED_STYLE_REF="styles.important" ID="ID_187727175" CREATED="1435092850792" MODIFIED="1435092877084">
<node TEXT="while ( condition )" ID="ID_1169369366" CREATED="1435092855664" MODIFIED="1435092861613"/>
<node TEXT="{" ID="ID_519849970" CREATED="1435092861991" MODIFIED="1435092863525"/>
<node TEXT="  //do stuff" ID="ID_1808432665" CREATED="1435092864096" MODIFIED="1435092870784"/>
<node TEXT="}" ID="ID_1007206332" CREATED="1435092871216" MODIFIED="1435092872334"/>
</node>
<node TEXT="For Statement" ID="ID_1290710652" CREATED="1432062687703" MODIFIED="1435099180780">
<attribute NAME="textbook" VALUE="5-06"/>
<node TEXT="Used to repeat a block of code a specific number of times" ID="ID_326642855" CREATED="1435092896553" MODIFIED="1435092914744"/>
<node TEXT="Has three parts" ID="ID_212492398" CREATED="1435092915016" MODIFIED="1435092944527">
<node TEXT="Initial condition" ID="ID_143361861" CREATED="1435092944535" MODIFIED="1435092948173"/>
<node TEXT="End condition" ID="ID_1313768460" CREATED="1435092948440" MODIFIED="1435092953549"/>
<node TEXT="Update rule" ID="ID_1595203626" CREATED="1435092953838" MODIFIED="1435092956045"/>
</node>
<node TEXT="Canonical form is fairly safe, but the for statement can be easily abused" ID="ID_222212203" CREATED="1435092957039" MODIFIED="1435092985699"/>
</node>
<node TEXT="For Syntax (Typical Usage)" LOCALIZED_STYLE_REF="styles.important" ID="ID_601659060" CREATED="1435092988655" MODIFIED="1435093042526">
<node TEXT="for (int i=0;i&lt;10;++i)" ID="ID_1864065963" CREATED="1435093006545" MODIFIED="1435093022582"/>
<node TEXT="{" ID="ID_66197255" CREATED="1435093023080" MODIFIED="1435093024280"/>
<node TEXT="  //do stuff" ID="ID_33791503" CREATED="1435093024504" MODIFIED="1435093032912"/>
<node TEXT="}" ID="ID_1423024815" CREATED="1435093033327" MODIFIED="1435093035536"/>
</node>
<node TEXT="Counters" ID="ID_1247438051" CREATED="1435348151958" MODIFIED="1435348263049">
<attribute NAME="textbook" VALUE="5-04"/>
<node TEXT="Sometimes it is usefull to know how many iterations have executed" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1205692843" CREATED="1435348156082" MODIFIED="1435348209494"/>
<node TEXT="Initialize a variable outside the loop" ID="ID_1704056664" CREATED="1435348170150" MODIFIED="1435348217186"/>
<node TEXT="Increment with each iteration" LOCALIZED_STYLE_REF="styles.topic" ID="ID_695422019" CREATED="1435348190232" MODIFIED="1435348248137"/>
<node TEXT="For-loops provide this automatically" ID="ID_1030172127" CREATED="1435348218712" MODIFIED="1435348243942"/>
</node>
<node TEXT="Accumulators" ID="ID_648605402" CREATED="1435348591958" MODIFIED="1435348659891">
<attribute NAME="textbook" VALUE="5-07"/>
<node TEXT="Sometimes it is helpful to accumulate summary information about the iterations of a loop" ID="ID_1032515086" CREATED="1435348598234" MODIFIED="1435348629180"/>
<node TEXT="Consider computing an average" ID="ID_1060306095" CREATED="1435348629438" MODIFIED="1435348640363"/>
</node>
<node TEXT="Sentinel Values" ID="ID_954633515" CREATED="1435348664536" MODIFIED="1435348778144">
<attribute NAME="textbook" VALUE="5-08"/>
<node TEXT="A \emph{Sentinel} is a special value that indicates the end of a list" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1576830729" CREATED="1435348670575" MODIFIED="1435355592448"/>
<node TEXT="Can be a source of many subtle errors" ID="ID_1805992665" CREATED="1435348689792" MODIFIED="1435348716257">
<node TEXT="Sentinel can not be in domain" ID="ID_1339063260" CREATED="1435348716264" MODIFIED="1435348735790"/>
</node>
</node>
</node>
<node TEXT="Recursion" ID="ID_204339248" CREATED="1432062523110" MODIFIED="1432062525006">
<node TEXT="Self-similarity" ID="ID_1325649027" CREATED="1435354103079" MODIFIED="1435354111872">
<node TEXT="Many real world problems exhibit self similarity" LOCALIZED_STYLE_REF="styles.topic" ID="ID_936089450" CREATED="1435354111875" MODIFIED="1435354157322"/>
<node TEXT="Their subproblems are just smaller instances of the same kind of problem" LOCALIZED_STYLE_REF="styles.topic" ID="ID_230207164" CREATED="1435354125319" MODIFIED="1435354209661"/>
<node TEXT="This is also called \emph{recursion}" ID="ID_859414711" CREATED="1435354251249" MODIFIED="1435354261312"/>
<node TEXT="We can take advantage of this by writing functions that call themselves with different arguments" ID="ID_434707818" CREATED="1435354210809" MODIFIED="1435354237696"/>
</node>
<node TEXT="Parts of a recursive function" ID="ID_884532585" CREATED="1435354320297" MODIFIED="1435354328938">
<node TEXT="Base Case" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1091082096" CREATED="1435354328944" MODIFIED="1435354429650">
<node TEXT="A subproblem so small that there is no work left to be done" ID="ID_1257616316" CREATED="1435354332687" MODIFIED="1435354343694"/>
</node>
<node TEXT="Division" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1889203885" CREATED="1435354345465" MODIFIED="1435354429648">
<node TEXT="How can a larger problem be divided into smaller problems" ID="ID_293259792" CREATED="1435354349272" MODIFIED="1435354365742"/>
</node>
<node TEXT="Recursive Call" LOCALIZED_STYLE_REF="styles.topic" ID="ID_806429576" CREATED="1435354367641" MODIFIED="1435354429644"/>
<node TEXT="Combination" ID="ID_1638162390" CREATED="1435354372871" MODIFIED="1435354378862">
<node TEXT="How can the results of the smaller problems be combined to make the solution to the larger problem" ID="ID_465003946" CREATED="1435354388633" MODIFIED="1435354409881"/>
</node>
</node>
<node TEXT="Recursive Factorial" LOCALIZED_STYLE_REF="styles.important" ID="ID_1371967455" CREATED="1435354262265" MODIFIED="1435354318530">
<node TEXT="int factorial(int n)" ID="ID_349372498" CREATED="1435354273929" MODIFIED="1435354280232"/>
<node TEXT="{" ID="ID_228390329" CREATED="1435354280697" MODIFIED="1435354281584"/>
<node TEXT="  if(n==0) return 1;" ID="ID_549437758" CREATED="1435354282041" MODIFIED="1435354291360"/>
<node TEXT="  return n * factorial(n-1);" ID="ID_1246284170" CREATED="1435354291825" MODIFIED="1435354303416"/>
<node TEXT="}" ID="ID_1089159802" CREATED="1435354304177" MODIFIED="1435354305480"/>
</node>
</node>
</node>
<node TEXT="Style" POSITION="right" ID="ID_1309960143" CREATED="1432062570824" MODIFIED="1432062617622">
<node TEXT="Indentation" ID="ID_1516134740" CREATED="1432062581964" MODIFIED="1432062624918">
<node TEXT="Indentation of new scopes" ID="ID_1450514400" CREATED="1435098948824" MODIFIED="1435098969251">
<node TEXT="When you enter a new scope you should indent" ID="ID_1209199720" CREATED="1435098971193" MODIFIED="1435098982502"/>
<node TEXT="There are different styles" ID="ID_1007132108" CREATED="1435098982945" MODIFIED="1435098989697"/>
<node TEXT="The point is that it sets off what is in a scope" ID="ID_1927836767" CREATED="1435098989930" MODIFIED="1435099002393"/>
</node>
<node TEXT="Indentation styles" LOCALIZED_STYLE_REF="styles.important" ID="ID_1485756779" CREATED="1435099003842" MODIFIED="1435099045049">
<node TEXT="Allman" ID="ID_755050960" CREATED="1435099009775" MODIFIED="1435099012375"/>
<node TEXT="{" ID="ID_1175059838" CREATED="1435099012778" MODIFIED="1435099014393"/>
<node TEXT="  //Indent here" ID="ID_1435096848" CREATED="1435099014970" MODIFIED="1435099021294"/>
<node TEXT="}" ID="ID_752478783" CREATED="1435099021712" MODIFIED="1435099023976"/>
<node TEXT="" ID="ID_1418782188" CREATED="1435099024522" MODIFIED="1435099024522"/>
<node TEXT="Java {" ID="ID_1715407819" CREATED="1435099026465" MODIFIED="1435099029305"/>
<node TEXT="  //Indent here" ID="ID_1495504606" CREATED="1435099029754" MODIFIED="1435099034272"/>
<node TEXT="}" ID="ID_543667003" CREATED="1435099034753" MODIFIED="1435099037825"/>
</node>
<node TEXT="Nested Control Structures" ID="ID_74624349" CREATED="1435354559095" MODIFIED="1435354654491">
<attribute NAME="textbook" VALUE="5-10"/>
<node TEXT="Indentation is particularly helpful when \emph{nesting} control structures" LOCALIZED_STYLE_REF="styles.topic" ID="ID_244416798" CREATED="1435354569071" MODIFIED="1435354644604"/>
<node TEXT="It is important to be able to see the inner-most loop at a glance" ID="ID_1250553883" CREATED="1435354594759" MODIFIED="1435354623792"/>
<node TEXT="Indentation also helps to see the shape of a program" ID="ID_1407317727" CREATED="1435354624072" MODIFIED="1435354634592"/>
</node>
<node TEXT="How far should you nest structures?" ID="ID_1986341203" CREATED="1435355651601" MODIFIED="1435355662172">
<node TEXT="&quot;If you need more than 3 levels of indentation, you&apos;re screwed anyway, and should fix your program.&quot; -- Linux 1.3.53 CodingStyle documentation" ID="ID_297901713" CREATED="1431542949309" MODIFIED="1431542975556"/>
</node>
</node>
<node TEXT="Cyclomatic Complexity Number" ID="ID_1416980334" CREATED="1432062588272" MODIFIED="1432062593646">
<node TEXT="Cyclomatic Complexity Number" ID="ID_1074567492" CREATED="1434749429845" MODIFIED="1434749438397">
<node TEXT="A count of the number of linearly independent paths through a function" ID="ID_324745442" CREATED="1434749438400" MODIFIED="1434749457638"/>
<node TEXT="Highly correlated with defects" ID="ID_963713311" CREATED="1434749458061" MODIFIED="1434749469309"/>
<node TEXT="A CCN above 15 virtually ensures that there is at least one bug in your code" ID="ID_797949004" CREATED="1434749469751" MODIFIED="1434749490533"/>
<node TEXT="Try to stay below 10" ID="ID_309988448" CREATED="1434749490774" MODIFIED="1434749499749"/>
<node TEXT="Various tools exist to help count this number - I personally like lizard" ID="ID_1043262844" CREATED="1434749499967" MODIFIED="1434749542750">
<node TEXT="Python script that gives a nice report" ID="ID_1406779649" CREATED="1434749545167" MODIFIED="1434749554349"/>
<node TEXT="https://github.com/terryyin/lizard" ID="ID_974895057" CREATED="1434749582319" MODIFIED="1434749586119"/>
</node>
</node>
<node TEXT="CCN Example" LOCALIZED_STYLE_REF="styles.important" ID="ID_1152192008" CREATED="1434749618255" MODIFIED="1435354732278">
<node TEXT="for(auto i=0;i&lt;100;++i)" ID="ID_1221335636" CREATED="1435354723375" MODIFIED="1435355044391"/>
<node TEXT="{" ID="ID_1466367691" CREATED="1435355045097" MODIFIED="1435355046462"/>
<node TEXT="  if(i%3==0)" ID="ID_1222829470" CREATED="1435355046761" MODIFIED="1435355079217"/>
<node TEXT="  {" ID="ID_536106724" CREATED="1435355080041" MODIFIED="1435355082286"/>
<node TEXT="    std::cout &lt;&lt; &quot;Fizz&quot;;" ID="ID_929401302" CREATED="1435355083065" MODIFIED="1435355098400"/>
<node TEXT="  }" ID="ID_23647122" CREATED="1435355098929" MODIFIED="1435355214645"/>
<node TEXT="  if(i%5==0)" ID="ID_1293517744" CREATED="1435355103913" MODIFIED="1435355115359"/>
<node TEXT="  {" ID="ID_16726370" CREATED="1435355115857" MODIFIED="1435355117830"/>
<node TEXT="    std::cout &lt;&lt; &quot;Buzz&quot;;" ID="ID_620999534" CREATED="1435355118521" MODIFIED="1435355128448"/>
<node TEXT="  }" ID="ID_568263429" CREATED="1435355129033" MODIFIED="1435355131880"/>
<node TEXT="  std::cout &lt;&lt; std::endl;" ID="ID_546257214" CREATED="1435355132193" MODIFIED="1435355139656"/>
<node TEXT="}" ID="ID_1354183609" CREATED="1435355140121" MODIFIED="1435355142045"/>
</node>
</node>
</node>
</node>
</map>
