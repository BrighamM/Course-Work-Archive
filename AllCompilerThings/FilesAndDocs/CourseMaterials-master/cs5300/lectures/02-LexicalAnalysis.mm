<map version="0.9.0">
<!--To view this file, download free mind mapping software Freeplane from http://freeplane.sourceforge.net -->
<node TEXT="Lexical Analysis" ID="ID_1248747817" CREATED="1365311514140" MODIFIED="1365311543742">
<hook NAME="MapStyle" max_node_width="600"/>
<attribute NAME="subtitle" VALUE="CS 5300 - Compilers"/>
<attribute NAME="date" VALUE=""/>
<attribute NAME="author" VALUE="Kenneth Sundberg"/>
<node TEXT="Introduction" POSITION="right" ID="ID_1982636566" CREATED="1365312506214" MODIFIED="1365312514195">
<node TEXT="Purpose of Lexical Analysis" ID="ID_1366505178" CREATED="1365311545024" MODIFIED="1365311568045">
<node TEXT="Modularity" ID="ID_1679067280" CREATED="1365311578399" MODIFIED="1365311586183">
<node TEXT="Allows Compiler to be more modular" ID="ID_419348228" CREATED="1365311586188" MODIFIED="1365311598588"/>
<node TEXT="Downstream processes can deal with tokens rather than character streams" ID="ID_509103861" CREATED="1365311598822" MODIFIED="1365311620139"/>
<node TEXT="Makes the compiler more portable as character set differences can be dealt with my the lexer" ID="ID_133797705" CREATED="1365311908955" MODIFIED="1365311930912"/>
</node>
<node TEXT="Simplicity" ID="ID_925659176" CREATED="1365311626309" MODIFIED="1365312482292">
<node TEXT="Comments and Whitespace have no meaning in the translation" ID="ID_1989602297" CREATED="1365311632333" MODIFIED="1365311659145"/>
<node TEXT="It is much easier to build a parser that can assume that these have already been removed" ID="ID_450084671" CREATED="1365311659547" MODIFIED="1365311681169"/>
</node>
<node TEXT="Efficient Implmentation" ID="ID_1881299162" CREATED="1365311688323" MODIFIED="1365311698659">
<node TEXT="Efficient Implmentation of Finite State Machines is well known and non-trivial" ID="ID_1472514354" CREATED="1365311698664" MODIFIED="1365311720463"/>
<node TEXT="Tools such as flex exist that implement these ideas" ID="ID_9019025" CREATED="1365311720682" MODIFIED="1365311732913"/>
<node TEXT="Code generated by these tools is high quality" ID="ID_735029524" CREATED="1365311733137" MODIFIED="1365311753110"/>
</node>
</node>
<node TEXT="Terms" ID="ID_600735839" CREATED="1365312006869" MODIFIED="1365312010365">
<node TEXT="Patterns, Lexemes, and Tokens" ID="ID_57516441" CREATED="1365312010831" MODIFIED="1365312039940">
<node TEXT="A Pattern is the rule (usually a regular expression) associated with a token" ID="ID_382044508" CREATED="1365312041062" MODIFIED="1365312102537"/>
<node TEXT="A Lexeme is the particular string that matched a pattern" ID="ID_268118039" CREATED="1365312102900" MODIFIED="1365312117112"/>
<node TEXT="A Token is the output of the lexer." ID="ID_1384145799" CREATED="1365312117516" MODIFIED="1365312152488"/>
</node>
<node TEXT="Tokens" ID="ID_220463224" CREATED="1365312014559" MODIFIED="1365312021748">
<node TEXT="Tokens are the Terminal symbols in the syntax parser" ID="ID_120017369" CREATED="1365312154714" MODIFIED="1365312172575"/>
<node TEXT="Tokens can also have attributes derived from their lexeme associated with them." ID="ID_1499594064" CREATED="1365312172914" MODIFIED="1365312195534"/>
</node>
<node TEXT="Example:" ID="ID_162594405" CREATED="1365312197385" MODIFIED="1365312202297">
<node TEXT="const pi = 3.14159;" ID="ID_705338313" CREATED="1365312202302" MODIFIED="1365312222173"/>
<node TEXT="const id{pi} = value{3.14159}" ID="ID_144743773" CREATED="1365312238711" MODIFIED="1365312262532"/>
</node>
</node>
</node>
<node TEXT="Flex and Lex" POSITION="right" ID="ID_1989511123" CREATED="1365312442248" MODIFIED="1365312448469">
<node TEXT="Overview" ID="ID_138002187" CREATED="1365312449848" MODIFIED="1365312578428">
<node TEXT="Process" ID="ID_336573215" CREATED="1365312578432" MODIFIED="1365312582436">
<node TEXT="Write a file lex.l in the Lex language" ID="ID_1924924480" CREATED="1365312582440" MODIFIED="1365312594888"/>
<node TEXT="Run Lex on lex.l to produce lex.yy.c" ID="ID_1722131382" CREATED="1365312595218" MODIFIED="1365312608687"/>
<node TEXT="Compile lex.yy.c into a.out a lexical analyser" ID="ID_231841977" CREATED="1365312609058" MODIFIED="1365312631223"/>
</node>
<node TEXT="A Cautionary Note" ID="ID_156482325" CREATED="1365312735510" MODIFIED="1365312747222">
<node TEXT="Flex (and Bison) produces C output not C++" ID="ID_557511645" CREATED="1365312747226" MODIFIED="1365312802593"/>
<node TEXT="They are link compatible, but . . ." ID="ID_1355257622" CREATED="1365312756237" MODIFIED="1365312764666"/>
<node TEXT="You will want to isolate lexical anaysis into its own module so that you can use C++ cleanly elsewhere" ID="ID_1642544482" CREATED="1365312765085" MODIFIED="1365312794033"/>
<node TEXT="There are C++ versions of flex available and you may use them but you are on your own" ID="ID_600983217" CREATED="1365312811411" MODIFIED="1365312834335"/>
</node>
</node>
<node TEXT="Syntax" ID="ID_1443650245" CREATED="1365312844538" MODIFIED="1365312847570">
<node TEXT="Lex Program" ID="ID_513668588" CREATED="1365312847575" MODIFIED="1365312855898">
<node TEXT="Three sections" ID="ID_1205555674" CREATED="1365312855902" MODIFIED="1365312878785">
<node TEXT="Declarations" ID="ID_285211750" CREATED="1365312878790" MODIFIED="1365312880910"/>
<node TEXT="Translation Rules" ID="ID_707306371" CREATED="1365312881113" MODIFIED="1365312885596"/>
<node TEXT="Procedures" ID="ID_414718879" CREATED="1365312885808" MODIFIED="1365312890077"/>
</node>
<node TEXT="Divided by \%\%" ID="ID_1726895543" CREATED="1365312868865" MODIFIED="1365312900501"/>
</node>
</node>
<node TEXT="Examples" ID="ID_1199074244" CREATED="1365313024947" MODIFIED="1365313027848"/>
</node>
</node>
</map>
